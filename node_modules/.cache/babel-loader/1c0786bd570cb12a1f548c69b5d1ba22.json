{"ast":null,"code":"var _jsxFileName = \"/home/julia/summitto-app/refund-app/src/component/RefundConfirm/index.js\";\nimport React, { Component } from \"react\";\nimport RefundForm from \"../RefundForm\";\nimport { Redirect } from \"react-router-dom\";\nimport { invoiceUpdate, invoiceLoad } from \"../../actions/refundinvoice\";\nimport { connect } from \"react-redux\";\n\nclass refundConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmRefund: \"\",\n      percentageOfRefund: \"\",\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        submitted: true\n      });\n\n      if (this.state.confirmRefund === \"yes\") {\n        const amountRefund = Number(this.props.invoice[0].amount) * (Number(this.state.percentageOfRefund) / 100);\n        const amountRefundPlusVAT = amountRefund + amountRefund * (21 / 100);\n        this.props.invoiceUpdate({\n          percentageOfRefund: Number(this.state.percentageOfRefund),\n          amountRefund: amountRefundPlusVAT.toFixed(2)\n        });\n      } else if (this.state.confirmRefund === \"no\" || this.state.confirmRefund === \"\" || this.state.confirmRefund === \"\") this.props.invoiceUpdate({\n        percentageOfRefund: 0,\n        amountRefund: 0\n      });\n    };\n  }\n\n  render() {\n    return this.state.confirmRefund === \"no\" && this.state.submitted === true ? React.createElement(Redirect, {\n      to: \"/refundoverview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : this.state.confirmRefund === \"yes\" && this.state.submitted === true ? React.createElement(Redirect, {\n      to: \"/refundoverview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(RefundForm, {\n      value: this.state,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(\"WHAT IS INVOICE\", state.invoice);\n  return {\n    invoice: state.invoice\n  };\n};\n\nexport default connect(mapStateToProps, {\n  invoiceUpdate,\n  invoiceLoad\n})(refundConfirm);","map":{"version":3,"sources":["/home/julia/summitto-app/refund-app/src/component/RefundConfirm/index.js"],"names":["React","Component","RefundForm","Redirect","invoiceUpdate","invoiceLoad","connect","refundConfirm","state","confirmRefund","percentageOfRefund","submitted","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","amountRefund","Number","props","invoice","amount","amountRefundPlusVAT","toFixed","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport RefundForm from \"../RefundForm\";\nimport { Redirect } from \"react-router-dom\";\nimport { invoiceUpdate, invoiceLoad } from \"../../actions/refundinvoice\";\nimport { connect } from \"react-redux\";\n\nclass refundConfirm extends Component {\n  state = {\n    confirmRefund: \"\",\n    percentageOfRefund: \"\",\n    submitted: false\n  };\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    if (this.state.confirmRefund === \"yes\") {\n      const amountRefund =\n        Number(this.props.invoice[0].amount) *\n        (Number(this.state.percentageOfRefund) / 100);\n\n      const amountRefundPlusVAT = amountRefund + amountRefund * (21 / 100);\n      this.props.invoiceUpdate({\n        percentageOfRefund: Number(this.state.percentageOfRefund),\n        amountRefund: amountRefundPlusVAT.toFixed(2)\n      });\n    } else if (\n      this.state.confirmRefund === \"no\" ||\n      this.state.confirmRefund === \"\" ||\n      this.state.confirmRefund === \"\"\n    )\n      this.props.invoiceUpdate({\n        percentageOfRefund: 0,\n        amountRefund: 0\n      });\n  };\n  render() {\n    return this.state.confirmRefund === \"no\" &&\n      this.state.submitted === true ? (\n      <Redirect to=\"/refundoverview\" />\n    ) : this.state.confirmRefund === \"yes\" && this.state.submitted === true ? (\n      <Redirect to=\"/refundoverview\" />\n    ) : (\n      <div>\n        <RefundForm\n          value={this.state}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(\"WHAT IS INVOICE\", state.invoice);\n  return {\n    invoice: state.invoice\n  };\n};\nexport default connect(mapStateToProps, {\n  invoiceUpdate,\n  invoiceLoad\n})(refundConfirm);\n"]},"metadata":{},"sourceType":"module"}