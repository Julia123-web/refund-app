{"ast":null,"code":"var _jsxFileName = \"/home/julia/summitto-app/refund-app/src/component/RefundConfirm/index.js\";\nimport React, { Component } from \"react\";\nimport RefundConfirm from \"../RefundConfirm\";\nimport { Redirect } from \"react-router-dom\";\nimport { invoiceUpdate, invoiceLoad } from \"../../actions/refundinvoice\";\nimport { connect } from \"react-redux\";\n\nclass refundConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      RefundConfirm: \"\",\n      RefundPercentage: \"\",\n      submitted: false\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        submitted: true\n      });\n\n      if (this.state.RefundConfirm === \"yes\") {\n        const amountRefund = Number(this.props.invoice[0].amount) * (Number(this.state.RefundPercentage) / 100);\n        const amountRefundPlusVAT = amountRefund + amountRefund * (21 / 100);\n        this.props.updateInvoiceDetail({\n          RefundPercentage: Number(this.state.RefundPercentage),\n          amountRefund: amountRefundPlusVAT.toFixed(2)\n        });\n      } else if (this.state.RefundConfirm === \"no\" || this.state.RefundConfirm === \"\" || this.state.RefundConfirm === \"\") this.props.updateInvoiceDetail({\n        RefundPercentage: 0,\n        amountRefund: 0\n      });\n    };\n  }\n\n  render() {\n    return this.state.RefundConfirm === \"no\" && this.state.submitted === true ? React.createElement(Redirect, {\n      to: \"/refundoverview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : this.state.RefundConfirm === \"yes\" && this.state.submitted === true ? React.createElement(Redirect, {\n      to: \"/refundoverview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(RefundConfirmForm, {\n      value: this.state,\n      onSubmit: this.onSubmit,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    invoice: state.invoice\n  };\n};\n\nexport default connect(mapStateToProps, {\n  invoiceUpdate,\n  invoiceLoad\n})(refundConfirm);","map":{"version":3,"sources":["/home/julia/summitto-app/refund-app/src/component/RefundConfirm/index.js"],"names":["React","Component","RefundConfirm","Redirect","invoiceUpdate","invoiceLoad","connect","refundConfirm","state","RefundPercentage","submitted","onChange","event","setState","target","name","value","onSubmit","preventDefault","amountRefund","Number","props","invoice","amount","amountRefundPlusVAT","updateInvoiceDetail","toFixed","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport RefundConfirm from \"../RefundConfirm\";\nimport { Redirect } from \"react-router-dom\";\nimport { invoiceUpdate, invoiceLoad } from \"../../actions/refundinvoice\";\nimport { connect } from \"react-redux\";\n\nclass refundConfirm extends Component {\n  state = {\n    RefundConfirm: \"\",\n    RefundPercentage: \"\",\n    submitted: false\n  };\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  onSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    if (this.state.RefundConfirm === \"yes\") {\n      const amountRefund =\n        Number(this.props.invoice[0].amount) *\n        (Number(this.state.RefundPercentage) / 100);\n\n      const amountRefundPlusVAT = amountRefund + amountRefund * (21 / 100);\n      this.props.updateInvoiceDetail({\n        RefundPercentage: Number(this.state.RefundPercentage),\n        amountRefund: amountRefundPlusVAT.toFixed(2)\n      });\n    } else if (\n      this.state.RefundConfirm === \"no\" ||\n      this.state.RefundConfirm === \"\" ||\n      this.state.RefundConfirm === \"\"\n    )\n      this.props.updateInvoiceDetail({\n        RefundPercentage: 0,\n        amountRefund: 0\n      });\n  };\n  render() {\n    return this.state.RefundConfirm === \"no\" &&\n      this.state.submitted === true ? (\n      <Redirect to=\"/refundoverview\" />\n    ) : this.state.RefundConfirm === \"yes\" && this.state.submitted === true ? (\n      <Redirect to=\"/refundoverview\" />\n    ) : (\n      <div>\n        <RefundConfirmForm\n          value={this.state}\n          onSubmit={this.onSubmit}\n          onChange={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    invoice: state.invoice\n  };\n};\nexport default connect(mapStateToProps, {\n  invoiceUpdate,\n  invoiceLoad\n})(refundConfirm);\n"]},"metadata":{},"sourceType":"module"}